#!/usr/bin/env ruby

$LOAD_PATH << File.join(File.dirname(__FILE__), '..', 'lib')

require 'rt'

# Floor & walls
floor = Sphere.new
floor.transform = Matrix.scaling(10, 0.01, 10)
floor.material.color = Color.new(1, 0.9, 0.9)
floor.material.specular = 0

left_wall = Sphere.new
left_wall.transform =
  Matrix.translation(0, 0, 5) *
  Matrix.rotation_y(-Math::PI/4) *
  Matrix.rotation_x(Math::PI/2) *
  Matrix.scaling(10, 0.01, 10)
left_wall.material = floor.material

right_wall = Sphere.new
right_wall.transform =
  Matrix.translation(0, 0, 5) *
  Matrix.rotation_y(Math::PI/4) *
  Matrix.rotation_x(Math::PI/2) *
  Matrix.scaling(10, 0.01, 10)
right_wall.material = floor.material

# Spheres
middle = Sphere.new
middle.transform = Matrix.translation(-0.5, 1, 0.5)
middle.material.color = Color.new(0.1, 1, 0.5)
middle.material.diffuse = 0.7
middle.material.specular = 0.3

right = Sphere.new
right.transform = Matrix.translation(1.5, 0.5, -0.5) * Matrix.scaling(0.5, 0.5, 0.5)
right.material.color = Color.new(0.5, 1, 0.1)
right.material.diffuse = 0.7
right.material.specular = 0.3

left = Sphere.new
left.transform = Matrix.translation(-1.5, 0.33, -0.75) * Matrix.scaling(0.33, 0.33, 0.33)
left.material.color = Color.new(1, 0.8, 0.1)
left.material.diffuse = 0.7
left.material.specular = 0.3

# World
world = World.new

world.objects = [
  floor,
  left_wall,
  right_wall,
  middle,
  right,
  left,
]

world.light = PointLight.new(Point(-10, 10, -10), Color.new(1, 1, 1))

# Render the world
camera = Camera.new(800, 451, Math::PI / 3)
camera.transform = view_transform(
  Point(0, 1.5, -5),
  Point(0, 1, 0),
  Vector(0, 1, 0),
)

canvas = camera.render(world)

# Write file
writer = PPMWriter.new(canvas)

name = File.basename(__FILE__)

File.open("#{name}.ppm", 'w') do |f|
  f.write(writer.write)
end
